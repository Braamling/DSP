import numpy as np
from numpy.random import randn
from numpy.fft import rfft
from scipy import signal
import matplotlib.pyplot as plt

b, a = signal.butter(4, 0.03, analog=False)

# Show that frequency response is the same
impulse = np.zeros(1000)


impulse[500] = 1
imp_ff = signal.filtfilt(b, a, impulse)
imp_lf = signal.lfilter(b, a, impulse)
plt.subplot(2, 2, 1)
plt.semilogx(20*np.log10(np.abs(rfft(imp_lf))))
plt.ylim(-100, 20)

plt.subplot(2, 2, 2)
plt.semilogx(20*np.log10(np.abs(rfft(imp_ff))))
plt.ylim(-100, 20)

sig = np.cumsum(randn(800))  # Brownian noise
sig = np.array([-0.01953125, -0.020782470703125, -0.022308349609375, -0.0228271484375, -0.022125244140625, -0.0201416015625, -0.0181884765625, -0.019989013671875, -0.02032470703125, -0.0166015625, -0.022003173828125, -0.021270751953125, -0.0198974609375, -0.017669677734375, -0.016632080078125, -0.024871826171875, -0.0213623046875, -0.021636962890625, -0.020477294921875, -0.02191162109375, -0.023895263671875, -0.022918701171875, -0.021728515625, -0.020904541015625, -0.021453857421875, -0.019195556640625, -0.02239990234375, -0.0184326171875, -0.0213623046875, -0.023162841796875, -0.020782470703125, -0.0194091796875, -0.019317626953125, -0.01898193359375, -0.019256591796875, -0.016204833984375, -0.014678955078125, -0.015533447265625, -0.019439697265625, -0.019317626953125, -0.0159912109375, -0.0169677734375, -0.0186767578125, -0.0203857421875, -0.021270751953125, -0.02081298828125, -0.019378662109375, -0.019561767578125, -0.025238037109375, -0.021514892578125, -0.019195556640625, -0.019927978515625, -0.024749755859375, -0.023193359375, -0.02349853515625, -0.02001953125, -0.0179443359375, -0.02276611328125, -0.018218994140625, -0.022216796875, -0.018463134765625, -0.018280029296875, -0.019012451171875, -0.017852783203125, -0.015228271484375, -0.02008056640625, -0.02069091796875, -0.020660400390625, -0.01513671875, -0.016357421875, -0.01995849609375, -0.021728515625, -0.0174560546875, -0.016815185546875, -0.016876220703125, -0.017364501953125, -0.017608642578125, -0.017578125, -0.01544189453125, -0.015838623046875, -0.017120361328125, -0.019195556640625, -0.016815185546875, -0.0174560546875, -0.015838623046875, -0.023101806640625, -0.018402099609375, -0.016754150390625, -0.015899658203125, -0.01904296875, -0.021026611328125, -0.019439697265625, -0.01971435546875, -0.01837158203125, -0.0179443359375, -0.01904296875, -0.0179443359375, -0.016845703125, -0.017730712890625, -0.01849365234375, -0.0218505859375, -0.02044677734375, -0.01580810546875, -0.01904296875, -0.018280029296875, -0.018829345703125, -0.0220947265625, -0.022216796875, -0.018463134765625, -0.018585205078125, -0.019805908203125, -0.016876220703125, -0.01904296875, -0.01885986328125, -0.02313232421875, -0.019256591796875, -0.0152587890625, -0.014617919921875, -0.0198974609375, -0.017547607421875, -0.0130615234375, -0.018157958984375, -0.016265869140625, -0.015716552734375, -0.01629638671875, -0.018310546875, -0.018280029296875, -0.014862060546875, -0.017303466796875, -0.021575927734375, -0.01995849609375, -0.019287109375, -0.014862060546875, -0.016143798828125, -0.009857177734375, -0.01190185546875, -0.022735595703125, -0.020843505859375, -0.0133056640625, -0.012176513671875, -0.0128173828125, -0.0137939453125, -0.00946044921875, -0.01751708984375, -0.012725830078125, -0.015594482421875, -0.016571044921875, -0.0167236328125, -0.0106201171875, -0.010345458984375, -0.010009765625, -0.008270263671875, -0.010528564453125, -0.017852783203125, -0.0126953125, -0.01763916015625, -0.005767822265625, -0.00946044921875, -0.0064697265625, -0.009368896484375])


sig_ff = signal.filtfilt(b, a, sig)
sig_lf = signal.lfilter(b, a, sig)
plt.subplot(2, 1, 2)
plt.plot(sig, color='silver', label='Original')
plt.plot(sig_ff, color='#3465a4', label='filtfilt')
plt.plot(sig_lf, color='#cc0000', label='lfilter')
plt.legend()

plt.show()
